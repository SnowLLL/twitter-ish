{"version":3,"sources":["lookup/lookup.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","reportWebVitals.js","index.js"],"names":["csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","BackendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xml","XMLHttpRequest","url","responseType","open","setRequestHeader","onload","response","status","onerror","alert","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleBackendActionEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","Tweet","didRetweet","hiddenActions","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","ParentTweet","Fragment","href","parent","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidset","setTweetsDidset","useEffect","finalList","newtweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updatetweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","onSubmit","newValue","current","value","console","log","required","ref","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rId","getElementById","e","createElement","MyComponent","setNewtweets","canTweet","cantweet","tempNewtweets","dataset","ReactDOM","render","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.c6fbcafc.chunk.js","sourcesContent":["// login auth \nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nconst csrftoken = getCookie('csrftoken');\n\nexport const BackendLookup = (method, endpoint, callback, data) => {\n    let jsonData;\n    if (data) {\n        //  converts a JavaScript object or value to a JSON string\n        jsonData = JSON.stringify(data)\n    }\n    const xml = new XMLHttpRequest()\n    const url = `http://localhost:8000/api/${endpoint}`\n    xml.responseType = 'json'\n    xml.open(method, url)\n    xml.setRequestHeader('Content-Type', 'application/json')\n\n    if (csrftoken) {\n        xml.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\n        xml.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n        xml.setRequestHeader('X-CSRFToken', csrftoken)\n        //only work on django, not on react local site\n        // JWT token work on the react local site\n    }\n\n    xml.onload = function () {\n        callback(xml.response, xml.status)\n    }\n    xml.onerror = function () {\n        alert(\"An error occured. Please try again later\")\n    }\n    xml.send(jsonData)\n}","import React from 'react'\nimport { apiTweetAction } from './lookup'\n\n// Action: like unlike retween btns\nexport function ActionBtn(props) {\n    const { tweet, action, didPerformAction } = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'ACTION'\n    //backend \n    const handleBackendActionEvent = (response, status) => {\n        if ((status === 200 || 201) && didPerformAction) {\n            didPerformAction(response, status)\n        }\n    }\n    const handleActionClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleBackendActionEvent)\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : `${actionDisplay}`\n    return <button className={className} onClick={handleActionClick}>{display}</button>\n}","import { BackendLookup } from '../lookup'\n\nexport const apiTweetCreate = (newTweet, callback) => {\n    BackendLookup(\"POST\", 'tweets/create/', callback, { content: newTweet })\n}\n\nexport const apiTweetAction = (tweetId, action, callback) => {\n    const data = { id: tweetId, action: action }\n    BackendLookup(\"POST\", 'tweets/action', callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    BackendLookup(\"GET\", `tweets/${tweetId}`, callback)\n}\n\nexport function apiTweetList(username, callback) {\n    let endpoint = 'tweets/'\n    if (username) {\n        endpoint = `tweets/?username=${username}`\n    }\n    BackendLookup(\"GET\", endpoint, callback)\n}","import React, { useState } from 'react'\nimport { ActionBtn } from './buttons'\n\n// key as props\nexport function Tweet(props) {\n    const { tweet, didRetweet, hiddenActions } = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n\n    const path = window.location.pathname\n    var match = path.match(/(?<tweetid>\\d+)/) // /(?P<id>\\d+)/ in python\n    // match = e.g [\"111\", \"111\", index: 1, input: \"/111\", groups: {…}]\n    const urlTweetId = match ? match.groups.tweetid : -1 // if match === true(exist) return ? or :\n\n    // handle view link button\n    const isDetail = `${tweet.id}` === `${urlTweetId}` // return true or false\n    const handleDetailLink = (event) => {\n        event.preventDefault()\n        // handle link redirection\n        window.location.href = `${tweet.id}`\n    }\n\n    // display parent tweet\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200) {\n            setActionTweet(newActionTweet)\n\n        } else if (status === 201) {\n            if (didRetweet) {\n                didRetweet(newActionTweet)\n            }\n        }\n    }\n    return (\n        <div className={className}>\n            <div>\n                < p >{tweet.id} - {tweet.content}</p >\n                < ParentTweet tweet={tweet} />\n            </div>\n\n            <div className='btn btn-group'>\n                {(actionTweet && hiddenActions !== true) &&\n                    <React.Fragment>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'like', display: 'Likes' }} />\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'unlike', display: 'UnLikes' }} />\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'retweet', display: 'Retweet' }} />\n                    </React.Fragment>}\n                {isDetail === true ? null : <button id=\"viewLink\" className=\"btn btn-outline-primary btn-sm\" onClick={handleDetailLink}> View </button>}\n            </div>\n        </div >\n\n    );\n}\n\n// parent API\nexport function ParentTweet(props) {\n    const { tweet } = props\n    return tweet.parent\n        ? <div className='row'>\n            <div className='col-11 mx-auto my-2 p-3 border'>\n                <p className='mb-0 text-muted'>Retweet</p>\n                {/* hiddenActions === true */}\n                <Tweet hiddenActions tweet={tweet.parent} />\n            </div>\n        </div>\n        : null\n}","import React, { useEffect, useState } from 'react'\nimport { apiTweetList } from './lookup'\nimport { Tweet } from './detail'\n\n// Tweet sections\nexport const TweetsList = (props) => {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidset, setTweetsDidset] = useState(false)\n    useEffect(() => {\n        const finalList = [...props.newtweets].concat(tweetsInit)\n        if (tweets.length !== finalList.length) {\n            setTweets(finalList)\n        }\n    }, [props.newtweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidset === false) {\n            // do my lookup\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setTweetsInit(response)\n                    setTweetsDidset(true)\n                }\n                else {\n                    alert('there is an error')\n                }\n            }\n            apiTweetList(props.username, handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidset, setTweetsDidset, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n        const updatetweetsInit = [...tweetsInit]\n        updatetweetsInit.unshift(newTweet)\n        setTweetsInit(updatetweetsInit)\n\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets) // why tweets not newTweet?\n        setTweets(updateFinalTweets)\n    }\n    return tweets.map((item, index) => {\n        return <Tweet\n            tweet={item}\n            didRetweet={handleDidRetweet}\n            className='my-5 py-5 border bg-white text-dark'\n            key={`${index}-{ item.id }`} /> // `` NOT ''\n    })\n}\n","import React from 'react'\nimport { apiTweetCreate } from './lookup'\n\nexport function TweetCreate(props) {\n    var textAreaRef = React.createRef()\n    const { didTweet } = props\n    const handleSumbitForm = (event) => {\n        event.preventDefault()\n        const newValue = textAreaRef.current.value\n\n        // backend API response\n        const BackendTweetCreateUpdate = (response, status) => {\n            if (status === 201) {\n                didTweet(response)\n            }\n            else {\n                console.log(response)\n                alert(\"An error occured\")\n            }\n        }\n        // change this to a server side call\n        apiTweetCreate(newValue, BackendTweetCreateUpdate)\n        textAreaRef.current.value = ''\n    }\n\n    return (\n        <div className={props.className}>\n            <form onSubmit={handleSumbitForm}>\n                <textarea required className='form-control mt-5' name=\"tweet\" ref={textAreaRef}></textarea>\n                <button type=\"submit\" className=\"btn btn-primary my-2\">Tweet</button>\n            </form>\n        </div>\n    );\n\n}","import React, { useState, useEffect } from 'react'\nimport { TweetsList } from './list'\nimport { TweetCreate } from './create'\nimport { apiTweetDetail } from './lookup'\nimport { Tweet } from './detail'\n\n//Form Sections\nexport const TweetForm = (props) => {\n    console.log(props)\n    // from index.html data-can-tweet will automatically change to 'data-cantweet'\n    // const { cantweet } = props\n\n    const [newtweets, setNewtweets] = useState([])\n    // change string to a boolean value\n    const canTweet = props.cantweet === 'false' ? false : true\n\n    const handleNewTweet = (newTweet) => {\n        let tempNewtweets = [...newtweets] // create an array of new tweets\n        tempNewtweets.unshift(newTweet)\n        setNewtweets(tempNewtweets)\n    }\n\n    return (\n        <div className={props.className}>\n            {canTweet === true &&\n                <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />}\n            <TweetsList {...props} newtweets={newtweets} />\n        </div>\n    );\n}\n\n// Tweet Detail Section\nexport const TweetDetailComponent = (props) => {\n    const { tweetId } = props\n    const [didLookup, setDidLookup] = useState(false)\n    const [tweet, setTweet] = useState(null)\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setTweet(response)\n        } else {\n            alert(\"There was an error finding your tweet.\")\n        }\n    }\n\n    useEffect(() => {\n        if (didLookup === false) {\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [tweetId, didLookup, setDidLookup])\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { TweetForm, TweetDetailComponent } from '../src/tweets';\nimport reportWebVitals from './reportWebVitals';\n\nconst rId = document.getElementById('tweetme');\nconst e = React.createElement\n// add children or props to TweetForm component\nconst MyComponent = e(TweetForm, rId.dataset)\n// ReactDOM.render(e(App, rId.dataset), rId);\nif (rId) {\n    ReactDOM.render(MyComponent, rId);\n}\n\nconst TweetDetailElement = document.querySelectorAll('.tweetme-detail')\n\nTweetDetailElement.forEach(container => {\n    ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}