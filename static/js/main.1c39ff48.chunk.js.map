{"version":3,"sources":["lookup/lookup.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/create.js","tweets/components.js","reportWebVitals.js","index.js"],"names":["csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","BackendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xml","XMLHttpRequest","url","responseType","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","console","log","onerror","e","alert","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleBackendActionEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hiddeLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userPicSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentV","is_following","follower_count","following_count","bio","ProfileBadgeComponet","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","hiddenActions","retweeter","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidset","setTweetsDidset","finalList","newtweets","concat","next","results","handleDidRetweet","newTweet","updatetweetsInit","unshift","updateFinalTweets","map","item","index","newTweetsList","TweetsFeedList","TweetCreate","textAreaRef","React","createRef","didTweet","onSubmit","newValue","current","value","required","ref","TweetDetailComponent","setTweet","apiTweetDetail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createElement","rId","getElementById","feedId","TweetDetailElement","querySelectorAll","profileBadgeElement","ReactDOM","render","setNewtweets","canTweet","cantweet","tempNewtweets","dataset","forEach","container"],"mappings":"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","file":"static/js/main.1c39ff48.chunk.js","sourcesContent":["// login auth \nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nconst csrftoken = getCookie('csrftoken');\n\nexport const BackendLookup = (method, endpoint, callback, data) => {\n    let jsonData;\n    if (data) {\n        //  converts a JavaScript object or value to a JSON string\n        jsonData = JSON.stringify(data)\n    }\n    const xml = new XMLHttpRequest()\n    const url = `http://localhost:8000/api/${endpoint}`\n    xml.responseType = 'json'\n    xml.open(method, url)\n    xml.setRequestHeader('Content-Type', 'application/json')\n\n    if (csrftoken) {\n        // xml.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\n        xml.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n        xml.setRequestHeader('X-CSRFToken', csrftoken)\n        //only work on django, not on react local site\n        // JWT token work on the react local site\n    }\n\n    xml.onload = function () {\n        if (xml.status === 403 && xml.response) {\n            var detail = xml.response.detail\n            if (detail === \"Authentication credentials were not provided.\") {\n                // return index of a string in an array: -1 = not exist\n                if (window.location.href.indexOf(\"login\") === -1) {\n                    window.location.href = '/login?showLoginRequired=true'\n                    console.log(detail)\n                }\n            }\n        }\n        callback(xml.response, xml.status)\n    }\n    xml.onerror = function (e) {\n        console.log('error: ', e)\n        alert(\"An error occured. Please try again later\")\n    }\n    xml.send(jsonData)\n}","import { BackendLookup } from '../lookup'\n\nexport const apiTweetCreate = (newTweet, callback) => {\n    BackendLookup(\"POST\", 'tweets/create/', callback, { content: newTweet })\n}\n\nexport const apiTweetAction = (tweetId, action, callback) => {\n    const data = { id: tweetId, action: action }\n    BackendLookup(\"POST\", 'tweets/action', callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    BackendLookup(\"GET\", `tweets/${tweetId}`, callback)\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = 'tweets/'\n    if (username) {\n        endpoint = `tweets/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api/\", \"\")\n    }\n    BackendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = 'tweets/feed'\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api/\", \"\")\n    }\n    BackendLookup(\"GET\", endpoint, callback)\n}","import React from 'react'\nimport { apiTweetAction } from './lookup'\n\n// Action: like unlike retween btns\nexport function ActionBtn(props) {\n    const { tweet, action, didPerformAction } = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'ACTION'\n    //backend \n    const handleBackendActionEvent = (response, status) => {\n        if ((status === 200 || 201) && didPerformAction) {\n            didPerformAction(response, status)\n        }\n    }\n    const handleActionClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleBackendActionEvent)\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : `${actionDisplay}`\n    return <button className={className} onClick={handleActionClick}>{display}</button>\n}","import React from 'react'\n\n// as a button\nexport const UserLink = (props) => {\n    const { username } = props\n    const handleUserLink = (e) => {\n        window.location.href = `/profile/${username}`\n    }\n    return <span className=\"pointer\" onClick={handleUserLink}>\n        {props.children}\n    </span>\n}\n\n// \nexport const UserDisplay = (props) => {\n    const { user, includeFullName, hiddeLink } = props\n    // if includeFullName ==== true namedisplay = ?....\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n    return <React.Fragment>\n        {nameDisplay}\n        {hiddeLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n    </React.Fragment>\n}\n\nexport const UserPicture = (props) => {\n    const { user, hiddeLink } = props\n    const userPicSpan = < span className=\"px-3 py-2 rounded-circle bg-dark text-white\" >{user.username[0]}</span >\n    return hiddeLink === true ? userPicSpan : <UserLink username={user.username}>{userPicSpan}</UserLink>\n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport const DisplayCount = (props) => {\n    return <span className={props.className}>{numeral(props.children).format('0 a')}</span>\n}","import React, { useEffect, useState } from 'react'\nimport { apiProfileDetail, apiProfileFollowToggle } from './lookup'\nimport { UserDisplay, UserPicture } from './components'\nimport { DisplayCount } from './utils'\n\n\nexport const ProfileBadge = (props) => {\n    // user means user's profile \n    const { user, didFollowToggle, profileLoading } = props\n    let currentV = (user && user.is_following) ? \"unfollow\" : 'follow'\n    currentV = profileLoading ? 'Loading' : currentV\n    const handleFollowToggle = (e) => {\n        e.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentV)\n        }\n    }\n    return user\n        ? <div>\n            <UserPicture user={user} hiddeLink />\n            <p> <UserDisplay user={user} includeFullName hiddeLink /></p>\n            <p> <DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? 'follower' : 'followers'} </p>\n            <p> <DisplayCount>{user.following_count}</DisplayCount> following</p>\n            <p>{user.location}</p>\n            <p>{user.bio}</p>\n            <button className=\"btn btn-primary\" onClick={handleFollowToggle}>{currentV}</button>\n        </div>\n        : null\n}\nexport const ProfileBadgeComponet = (props) => {\n    const { username } = props\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setProfile(response)\n        }\n    }\n\n    useEffect(() => {\n        if (didLookup === false) {\n            apiProfileDetail(username, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [username, didLookup, setDidLookup])\n\n    // backend side\n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status) => {\n            console.log(response, status)\n            // update interface immediately\n            if (status === 200) {\n                setProfile(response)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n    }\n\n    return didLookup === false\n        ? 'Loading...'\n        : profile\n            ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} />\n            : null\n    // <Tweet tweet={tweet} className={props.className} />\n}","import { BackendLookup } from '../lookup'\n\nexport function apiProfileDetail(username, callback) {\n    BackendLookup(\"GET\", `profiles/${username}`, callback)\n}\n\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {\n        action: `${action && action}`.toLowerCase()\n    }\n    BackendLookup(\"POST\", `profiles/${username}/follow`, callback, data)\n}","import React, { useState } from 'react'\nimport { ActionBtn } from './buttons'\nimport { UserPicture, UserDisplay } from '../profiles'\n\n// parent API\nexport function ParentTweet(props) {\n    const { tweet } = props\n    return tweet.parent\n        ? <Tweet isRetweet hiddenActions retweeter={props.retweeter} tweet={tweet.parent} />\n        : null\n    // isRetweet,hiddenActions === true\n}\n\n// key as props\nexport function Tweet(props) {\n    const { tweet, didRetweet, hiddenActions, isRetweet, retweeter } = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    // when parent here, change style -> add border\n    let className = props.className ? props.className : 'col-10 col-md-6'\n    className = isRetweet === true ? `${className} border rounded p-2` : className\n\n    const path = window.location.pathname\n    var match = path.match(/(?<tweetid>\\d+)/) // /(?P<id>\\d+)/ in python\n    // match = e.g [\"111\", \"111\", index: 1, input: \"/111\", groups: {…}]\n    const urlTweetId = match ? match.groups.tweetid : -1 // if match === true(exist) return ? or :\n\n    // handle view link button\n    const isDetail = `${tweet.id}` === `${urlTweetId}` // return true or false\n    const handleDetailLink = (event) => {\n        event.preventDefault()\n        // handle link redirection\n        window.location.href = `${tweet.id}`\n    }\n\n    // display parent tweet\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200) {\n            setActionTweet(newActionTweet)\n\n        } else if (status === 201) {\n            if (didRetweet) {\n                didRetweet(newActionTweet)\n            }\n        }\n    }\n    return (\n        <div className={className}>\n            {isRetweet === true && <div className='mb-3'> <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span></div>}\n            <div className=\"d-flex\">\n                <div className='col-1'>\n                    <UserPicture user={tweet.user} />\n                </div>\n                <div className=\"col-11\">\n                    {/* All content here */}\n                    <div>\n                        <p>\n                            <UserDisplay includeFullName user={tweet.user} />\n                        </p>\n\n                        < p >{tweet.content}</p >\n                        < ParentTweet tweet={tweet} retweeter={tweet.user} />\n                    </div>\n\n                    <div className='btn btn-group px-0'>\n                        {(actionTweet && hiddenActions !== true) &&\n                            <React.Fragment>\n                                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'like', display: 'Likes' }} />\n                                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'unlike', display: 'UnLikes' }} />\n                                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'retweet', display: 'Retweet' }} />\n                            </React.Fragment>}\n                        {isDetail === true ? null : <button id=\"viewLink\" className=\"btn btn-outline-primary btn-sm\" onClick={handleDetailLink}> View </button>}\n                    </div>\n                </div>\n            </div>\n        </div >\n\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport { apiTweetList } from './lookup'\nimport { Tweet } from './detail'\n\n// Tweet sections\nexport const TweetsList = (props) => {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidset, setTweetsDidset] = useState(false)\n    useEffect(() => {\n        const finalList = [...props.newtweets].concat(tweetsInit)\n        if (tweets.length !== finalList.length) {\n            setTweets(finalList)\n        }\n    }, [props.newtweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidset === false) {\n            // do my lookup\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    setTweetsInit(response.results) // from api views see response,you can know results\n                    setTweetsDidset(true)\n                }\n            }\n            apiTweetList(props.username, handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidset, setTweetsDidset, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n        const updatetweetsInit = [...tweetsInit]\n        updatetweetsInit.unshift(newTweet)\n        setTweetsInit(updatetweetsInit)\n\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets) // why tweets not newTweet?\n        setTweets(updateFinalTweets)\n    }\n\n    const handleNextPage = (e) => {\n        e.preventDefault()\n        if (nextUrl !== null) {\n            const handleBackendNextPageButton = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    // keep on loading: scroll down to display new page tweets\n                    const newTweetsList = [...tweets].concat(response.results)\n                    setTweetsInit(newTweetsList) // from api views see response,you can know results\n                    setTweets(newTweetsList)\n                }\n            }\n            apiTweetList(props.username, handleBackendNextPageButton, nextUrl)\n        }\n    }\n    return <React.Fragment>\n        {tweets.map((item, index) => {\n            return <Tweet\n                tweet={item}\n                didRetweet={handleDidRetweet}\n                className='my-5 py-5 border bg-white text-dark'\n                key={`${index}-{ item.id }`} /> // `` NOT ''\n        })}\n        {nextUrl != null && <button className=\"btn btn-outline-primary\" onClick={handleNextPage}>Next Page</button>}\n    </React.Fragment>\n}\n","import React, { useEffect, useState } from 'react'\nimport { apiTweetFeed } from './lookup'\nimport { Tweet } from './detail'\n\n\n// Tweet sections\nexport const TweetsFeedList = (props) => {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidset, setTweetsDidset] = useState(false)\n    useEffect(() => {\n        const finalList = [...props.newtweets].concat(tweetsInit)\n        if (tweets.length !== finalList.length) {\n            setTweets(finalList)\n        }\n    }, [props.newtweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidset === false) {\n            // do my lookup\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    setTweetsInit(response.results) // from api views see response,you can know results\n                    setTweetsDidset(true)\n                }\n            }\n            apiTweetFeed(handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidset, setTweetsDidset, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n        const updatetweetsInit = [...tweetsInit]\n        updatetweetsInit.unshift(newTweet)\n        setTweetsInit(updatetweetsInit)\n\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets) // why tweets not newTweet?\n        setTweets(updateFinalTweets)\n    }\n\n    const handleNextPage = (e) => {\n        e.preventDefault()\n        if (nextUrl !== null) {\n            const handleBackendNextPageButton = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    // keep on loading: scroll down to display new page tweets\n                    const newTweetsList = [...tweets].concat(response.results)\n                    setTweetsInit(newTweetsList) // from api views see response,you can know results\n                    setTweets(newTweetsList)\n                }\n            }\n            apiTweetFeed(handleBackendNextPageButton, nextUrl)\n        }\n    }\n    return <React.Fragment>\n        {tweets.map((item, index) => {\n            return <Tweet\n                tweet={item}\n                didRetweet={handleDidRetweet}\n                className='my-5 py-5 border bg-white text-dark'\n                key={`${index}-{ item.id }`} /> // `` NOT ''\n        })}\n        {nextUrl != null && <button className=\"btn btn-outline-primary\" onClick={handleNextPage}>Next Page</button>}\n    </React.Fragment>\n}","import React from 'react'\nimport { apiTweetCreate } from './lookup'\n\nexport function TweetCreate(props) {\n    var textAreaRef = React.createRef()\n    const { didTweet } = props\n    const handleSumbitForm = (event) => {\n        event.preventDefault()\n        const newValue = textAreaRef.current.value\n\n        // backend API response\n        const BackendTweetCreateUpdate = (response, status) => {\n            if (status === 201) {\n                didTweet(response)\n            }\n            else {\n                console.log(response)\n                alert(\"An error occured\")\n            }\n        }\n        // change this to a server side call\n        apiTweetCreate(newValue, BackendTweetCreateUpdate)\n        textAreaRef.current.value = ''\n    }\n\n    return (\n        <div className={props.className}>\n            <form onSubmit={handleSumbitForm}>\n                <textarea required className='form-control mt-5' name=\"tweet\" ref={textAreaRef}></textarea>\n                <button type=\"submit\" className=\"btn btn-primary my-2\">Tweet</button>\n            </form>\n        </div>\n    );\n\n}","import React, { useState, useEffect } from 'react'\nimport { TweetsList } from './list'\nimport { TweetsFeedList } from './feed'\nimport { TweetCreate } from './create'\nimport { apiTweetDetail } from './lookup'\nimport { Tweet } from './detail'\n\n//Feed Form Sections\nexport const FeedFormComponents = (props) => {\n    // from index.html data-can-tweet will automatically change to 'data-cantweet'\n    // const { cantweet } = props\n\n    const [newtweets, setNewtweets] = useState([])\n    // change string to a boolean value\n    const canTweet = props.cantweet === 'false' ? false : true\n\n    const handleNewTweet = (newTweet) => {\n        let tempNewtweets = [...newtweets] // create an array of new tweets\n        tempNewtweets.unshift(newTweet)\n        setNewtweets(tempNewtweets)\n    }\n\n    return (\n        <div className={props.className}>\n            {canTweet === true &&\n                <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />}\n            <TweetsFeedList {...props} newtweets={newtweets} />\n        </div>\n    );\n}\n\n//Form Sections\nexport const TweetForm = (props) => {\n    // from index.html data-can-tweet will automatically change to 'data-cantweet'\n    // const { cantweet } = props\n\n    const [newtweets, setNewtweets] = useState([])\n    // change string to a boolean value\n    const canTweet = props.cantweet === 'false' ? false : true\n\n    const handleNewTweet = (newTweet) => {\n        let tempNewtweets = [...newtweets] // create an array of new tweets\n        tempNewtweets.unshift(newTweet)\n        setNewtweets(tempNewtweets)\n    }\n\n    return (\n        <div className={props.className}>\n            {canTweet === true &&\n                <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />}\n            <TweetsList {...props} newtweets={newtweets} />\n        </div>\n    );\n}\n\n// Tweet Detail Section\nexport const TweetDetailComponent = (props) => {\n    const { tweetId } = props\n    const [didLookup, setDidLookup] = useState(false)\n    const [tweet, setTweet] = useState(null)\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setTweet(response)\n        } else {\n            alert(\"There was an error finding your tweet.\")\n        }\n    }\n\n    useEffect(() => {\n        if (didLookup === false) {\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [tweetId, didLookup, setDidLookup])\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { TweetForm, TweetDetailComponent, FeedFormComponents } from './tweets';\nimport { ProfileBadgeComponet } from './profiles'\nimport reportWebVitals from './reportWebVitals';\n\n\nconst e = React.createElement\nconst rId = document.getElementById('tweetme');\nconst feedId = document.getElementById('tweetme-feed');\nconst TweetDetailElement = document.querySelectorAll('.tweetme-detail')\nconst profileBadgeElement = document.querySelectorAll('.tweetme-profileBadge')\n\n\n// add children or props to TweetForm component\n// ReactDOM.render(e(App, rId.dataset), rId);\n// The same style -> sometimes it only render the first one\nif (rId) {\n    ReactDOM.render(e(TweetForm, rId.dataset), rId);\n    console.log(rId)\n}\n\nif (feedId) {\n    ReactDOM.render(e(FeedFormComponents, feedId.dataset), feedId);\n    console.log(feedId)\n}\n\nTweetDetailElement.forEach(container => {\n    ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n    console.log(container)\n})\n\nprofileBadgeElement.forEach(container => {\n    ReactDOM.render(e(ProfileBadgeComponet, container.dataset), container);\n    console.log(container)\n})\n\n\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//       <App />\n//     </React.StrictMode>,\n//     document.getElementById('root')\n//   );\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}